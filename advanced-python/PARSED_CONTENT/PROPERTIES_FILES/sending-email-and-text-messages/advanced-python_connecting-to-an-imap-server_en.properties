connecting-to-an-imap-server_key1=name:  connecting-to-an-imap-server
connecting-to-an-imap-server_key2=Connecting to an IMAP Server
connecting-to-an-imap-server_key3=Just like you needed an SMTP object to connect to an SMTP server and send email, you need an IMAPClient object to connect to an IMAP server and receive email. First you’ll need the domain name of your email provider’s IMAP server. This will be different from the SMTP server’s domain name. Table 16-2 lists the IMAP servers for several popular email providers.
connecting-to-an-imap-server_key4=Table 16-2. Email Providers and Their IMAP Servers
connecting-to-an-imap-server_key5=Provider                                 IMAP server domain name
connecting-to-an-imap-server_key6=Gmail                                     imap.gmail.com
connecting-to-an-imap-server_key7=Outlook.com/Hotmail.com                 imap-mail.outlook.com
connecting-to-an-imap-server_key8=Yahoo Mail                                 imap.mail.yahoo.com
connecting-to-an-imap-server_key9=AT&T                                     imap.mail.att.net
connecting-to-an-imap-server_key10=Comcast                                    imap.comcast.net
connecting-to-an-imap-server_key11=Verizon                                    incoming.verizon.net
connecting-to-an-imap-server_key12=Once you have the domain name of the IMAP server, call the imapclient.IMAPClient() function to create an IMAPClient object. Most email providers require SSL encryption, so pass the ssl=True keyword argument. Enter the following into the interactive shell (using your provider’s domain name):
connecting-to-an-imap-server_key13=In all of the interactive shell examples in the following sections, the imapObj variable will contain an IMAPClient object returned from the imapclient.IMAPClient() function. In this context, a client is the object that connects to the server.
connecting-to-an-imap-server_key14=Logging in to the IMAP Server
connecting-to-an-imap-server_key15=Once you have an IMAPClient object, call its login() method, passing in the username (this is usually your email address) and password as strings.
connecting-to-an-imap-server_key16='
connecting-to-an-imap-server_key17=my_email_address@gmail.com
connecting-to-an-imap-server_key18= Jane Doe authenticated (Success)'
connecting-to-an-imap-server_key19=Warning
connecting-to-an-imap-server_key20=Remember, never write a password directly into your code! Instead, design your program to accept the password returned from input().
connecting-to-an-imap-server_key21=If the IMAP server rejects this username/password combination, Python will raise an imaplib.error exception. For Gmail accounts, you may need to use an application-specific password; for more details, see Gmail’s Application-Specific Passwords.
